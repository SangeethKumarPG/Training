-- SIMPLE LOOP
DECLARE

CTR NUMBER:=1;

BEGIN
    LOOP 
        DBMS_OUTPUT.PUT_LINE('HELLO'||CTR);
        CTR:=CTR+1;
        EXIT WHEN CTR > 5;
    END LOOP;
END;

-- WHILE LOOP

DECLARE
CTR NUMBER:=1;
BEGIN
    WHILE(CTR<=5)
    LOOP
        DBMS_OUTPUT.PUT_LINE('HELLO'||CTR);
        CTR:= CTR+1;
    END LOOP;
END;

--FOR LOOP
DECLARE
CTR NUMBER;
BEGIN
    FOR CTR IN 1..5
    LOOP
        DBMS_OUTPUT.PUT_LINE('HELLO '||CTR);
    END LOOP;
END;

-- REVERSE COUNTER USING BASIC LOOP
DECLARE 
CTR NUMBER :=10;
BEGIN
    LOOP
        DBMS_OUTPUT.PUT_LINE(CTR);
        CTR := CTR-1;
        EXIT WHEN CTR < 1;
    END LOOP;
END;

-- REVERSE COUNTER USING FOR LOOP
DECLARE
CTR NUMBER;
BEGIN
    FOR CTR IN REVERSE 1..10 -- WE USE THE REVERSE KEYWORD TO REVERSE THE LOOP.
    LOOP
        DBMS_OUTPUT.PUT_LINE(CTR);
    END LOOP;
END;

-- SIMPLE ARRAY PROGRAM
DECLARE 
NUM NUMBER;
TYPE MY_ARRAY IS VARRAY(4) OF VARCHAR2(10);
MY_COLORS MY_ARRAY:=MY_ARRAY(NULL, NULL, NULL, NULL);
BEGIN
    MY_COLORS(1) := 'RED';
    MY_COLORS(2) := 'GREEN';
    MY_COLORS(3) := 'BLUE';
    MY_COLORS(4) := 'YELLOW';
    
    FOR I IN 1..MY_COLORS.COUNT
    LOOP
        DBMS_OUTPUT.PUT_LINE(MY_COLORS(I));
    END LOOP;
END;

-- ANOTHER STYLE OF CREATING ARRAYS
DECLARE
TYPE MY_ARRAY IS TABLE OF VARCHAR2(40);
MY_COLORS MY_ARRAY := MY_ARRAY(NULL, NULL, NULL);
BEGIN
    MY_COLORS(1) := 'RED';
    MY_COLORS(2) := 'BLUE';
    MY_COLORS(3) := 'GREEN';
    DBMS_OUTPUT.PUT_LINE('SIZE OF ARRAY IS '||MY_COLORS.COUNT);

    MY_COLORS.DELETE(2);
 
    IF MY_COLORS.EXISTS(2) THEN
        DBMS_OUTPUT.PUT_LINE('ELEMENT OF 2 '||MY_COLORS(2));
    ELSE
        DBMS_OUTPUT.PUT_LINE('2 IS NOT AVAILABLE');
    END IF;
END;